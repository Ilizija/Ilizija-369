function minPR(p){return{number:p.number,title:p.title,state:p.state,by:p.user?.login,head:p.head?.ref,base:p.base?.ref,merged:p.merged_at?true:false,updated:p.updated_at,url:p.html_url}} export default async function handler(req,res){ try{ const owner=process.env.IK_OWNER, repo=process.env.IK_REPO; const token=process.env.IK_GH_TOKEN; if(!owner||!repo||!token) return res.status(400).json({error:'Missing IK_* envs'}); const [openR,closedR]=await Promise.all([ fetch(`https://api.github.com/repos/${owner}/${repo}/pulls?state=open&per_page=20`,{headers:{Authorization:`Bearer ${token}`,Accept:'application/vnd.github+json'}}), fetch(`https://api.github.com/repos/${owner}/${repo}/pulls?state=closed&per_page=20`,{headers:{Authorization:`Bearer ${token}`,Accept:'application/vnd.github+json'}}) ]); const open=openR.ok?await openR.json():[]; const closed=closedR.ok?await closedR.json():[]; res.status(200).json({ok:true,open:open.map(minPR),recent:closed.slice(0,10).map(minPR)}); }catch(e){ res.status(500).json({error:e.message}); } }