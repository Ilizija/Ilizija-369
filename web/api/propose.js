export default async function handler(req,res){ if(req.method!=='POST') return res.status(405).json({error:'Use POST'}); try{ const chunks=[]; for await(const c of req) chunks.push(c); const raw=Buffer.concat(chunks).toString('utf8'); const body=raw?JSON.parse(raw):{}; const {title,files}=body; if(!title||!Array.isArray(files)||files.length===0) return res.status(400).json({error:'Missing title/files'}); const owner=process.env.IK_OWNER, repo=process.env.IK_REPO, branch=process.env.IK_BRANCH||'main'; const token=process.env.IK_GH_TOKEN; const base=await (await fetch(`https://api.github.com/repos/${owner}/${repo}/branches/${branch}`,{headers:{Authorization:`Bearer ${token}`,Accept:'application/vnd.github+json'}})).json(); const baseSha=base.commit.sha; const stamp=new Date().toISOString().replace(/[:.]/g,'').slice(0,15); const safe=title.toLowerCase().replace(/[^a-z0-9._-]+/g,'-').replace(/^-+|-+$/g,''); const head=`evolve/${stamp}_${safe}`; await fetch(`https://api.github.com/repos/${owner}/${repo}/git/refs`,{method:'POST',headers:{Authorization:`Bearer ${token}`,'Content-Type':'application/json',Accept:'application/vnd.github+json'},body:JSON.stringify({ref:`refs/heads/${head}`,sha:baseSha})}); for(const f of files){ const baseUrl=`https://api.github.com/repos/${owner}/${repo}/contents/${encodeURIComponent(f.path)}`; let sha; const get=await fetch(`${baseUrl}?ref=${encodeURIComponent(head)}`,{headers:{Authorization:`Bearer ${token}`,Accept:'application/vnd.github+json'}}); if(get.ok){ const gj=await get.json(); sha=gj.sha; } const put=await fetch(baseUrl,{method:'PUT',headers:{Authorization:`Bearer ${token}`,Accept:'application/vnd.github+json','Content-Type':'application/json'},body:JSON.stringify({message:`evolution: ${title}`,content:Buffer.from(f.content,'utf8').toString('base64'),branch:head,sha})}); if(!put.ok) return res.status(400).json({error:await put.text()}); } const pr=await (await fetch(`https://api.github.com/repos/${owner}/${repo}/pulls`,{method:'POST',headers:{Authorization:`Bearer ${token}`,'Content-Type':'application/json',Accept:'application/vnd.github+json'},body:JSON.stringify({title:`evolution: ${title}`,head,base:branch,body:'Auto-proposed by Iknow.'})})).json(); res.status(200).json({ok:true,pr:{number:pr.number,url:pr.html_url,head}}); }catch(e){ res.status(500).json({error:e.message}); } }